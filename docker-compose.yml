#version: '3.5'

#services:
#  etcd:
#    container_name: milvus-etcd
#    image: quay.io/coreos/etcd:v3.5.5
#    environment:
#      - ETCD_AUTO_COMPACTION_MODE=revision
#      - ETCD_AUTO_COMPACTION_RETENTION=1000
#      - ETCD_QUOTA_BACKEND_BYTES=4294967296
#      - ETCD_SNAPSHOT_COUNT=50000
#    volumes:
#      - ${DOCKER_VOLUME_DIRECTORY:-.}/volumes/etcd:/etcd
#    command: etcd -advertise-client-urls=http://127.0.0.1:2379 -listen-client-urls http://0.0.0.0:2379 --data-dir /etcd
#    healthcheck:
#      test: ["CMD", "etcdctl", "endpoint", "health"]
#      interval: 30s
#      timeout: 20s
#      retries: 3
#
#  minio:
#    container_name: milvus-minio
#    image: minio/minio:RELEASE.2023-03-20T20-16-18Z
#    environment:
#      MINIO_ACCESS_KEY: minioadmin
#      MINIO_SECRET_KEY: minioadmin
#    ports:
#      - "9001:9001"
#      - "9000:9000"
#    volumes:
#      - ${DOCKER_VOLUME_DIRECTORY:-.}/volumes/minio:/minio_data
#    command: minio server /minio_data --console-address ":9001"
#    healthcheck:
#      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
#      interval: 30s
#      timeout: 20s
#      retries: 3
#
#  standalone:
#      container_name: milvus-standalone
#      image: milvusdb/milvus:v2.5.0-beta
#      command: ["sh", "-c", "./setup_milvus.sh && milvus run standalone"]
#      security_opt:
#        - seccomp:unconfined
#      environment:
#        ETCD_ENDPOINTS: etcd:2379
#        MINIO_ADDRESS: minio:9000
#      volumes:
#        - ${DOCKER_VOLUME_DIRECTORY:-.}/volumes/milvus:/var/lib/milvus
#      healthcheck:
#        test: ["CMD", "curl", "-f", "http://localhost:9091/healthz"]
#        interval: 30s
#        start_period: 90s
#        timeout: 20s
#        retries: 3
#      ports:
#        - "19530:19530"
#        - "9091:9091"
#      depends_on:
#        - "etcd"
#        - "minio"
#
#networks:
#  default:
#    name: milvus

services:
  redis:
    image: redis/redis-stack:latest
    container_name: redis-vector-store
    hostname: localhost
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    command: redis-server --appendonly yes
    networks:
          - default
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    deploy:
      resources:
        limits:
          cpus: '0.50'
          memory: 256M
    restart: unless-stopped

volumes:
  redis-data:
    driver: local

#version: '3.8'
#
#services:
#  redis:
#    image: redis:7.2-alpine
#    container_name: redis-vector-store
#    ports:
#      - "6379:6379"
#    volumes:
#      - redis-data:/data
#    command: redis-server --appendonly yes
#    healthcheck:
#      test: ["CMD", "redis-cli", "ping"]
#      interval: 10s
#      timeout: 5s
#      retries: 5
#    deploy:
#      resources:
#        limits:
#          cpus: '0.50'
#          memory: 256M
#    restart: unless-stopped
#
#  # Optional: Redis Insight - GUI for Redis (uncomment if you want a web interface)
#  redis-insight:
#    image: redislabs/redisinsight:latest
#    container_name: redis-insight
#    ports:
#      - "8001:8001"
#    volumes:
#      - redis-insight-data:/db
#    depends_on:
#      - redis
#    restart: unless-stopped
#
#volumes:
#  redis-data:
#    driver: local
#  redis-insight-data:
#    driver: local


#  weaviate:
#    image: cr.weaviate.io/semitechnologies/weaviate:1.28.0
#    ports:
#      - "8282:8080"
#      - "50051:50051"
#    volumes:
#      - weaviate_data:/var/lib/weaviate
#    environment:
#      - QUERY_DEFAULTS_LIMIT=25
#      - AUTHENTICATION_ANONYMOUS_ACCESS_ENABLED=true
#      - PERSISTENCE_DATA_PATH=/var/lib/weaviate
#      - DEFAULT_VECTORIZER_MODULE=text2vec-transformers
#      - ENABLE_MODULES=text2vec-transformers
#      - TRANSFORMERS_INFERENCE_API=http://t2v-transformers:8080
#      - CLUSTER_HOSTNAME=node1
#    restart: on-failure:0
#    depends_on:
#      - t2v-transformers
#    healthcheck:
#      test: ["CMD", "curl", "-f", "http://localhost:8080/v1/.well-known/ready"]
#      interval: 30s
#      timeout: 20s
#      retries: 3
#
#  t2v-transformers:
#    image: cr.weaviate.io/semitechnologies/transformers-inference:sentence-transformers-multi-qa-MiniLM-L6-cos-v1
#    environment:
#      ENABLE_CUDA: 1 # set to 1 to enable
#
#volumes:
#  weaviate_data: